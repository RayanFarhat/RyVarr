version: '3.8'
networks:
  server-network:
    driver: bridge
# docker compose -f docker-compose-prod.yml up -d
# docker compose -f docker-compose-prod.yml build
# docker compose -f docker-compose-prod.yml down
# docker compose -f docker-compose-prod.yml run --rm certbot certonly --webroot --webroot-path /var/www/certbot/ --dry-run -d ryvarr.com

services:
  # client:
  #     build: ./ClientAvalonia
  #     networks:
  #       - server-network
  # # important: not exposing ports so the server only listen to docker containers in his network
  nginx:
    build: ./nginx/prod
    ports:
      - '80:80'
      - '443:443'
    networks:
      - server-network
    depends_on:
      - backendserver
      - client
    volumes:
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro

  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw
# for first time to create keys hide https in nginx conf and run the containers
# then run
# docker compose -f docker-compose-prod.yml run --rm certbot certonly --webroot -w /var/www/certbot/ --force-renewal --email {email} -d ryvarr.com --agree-tos
# after that we created teh keys, then re-show the https server in nginx and run the containers

  db:
    image: postgres:16.1
    ports:
      - '5432:5432' # used with pgadmin
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    networks:
      - server-network
    volumes:
      - ./database/postgresql:/var/lib/postgresql/data
      
    ######################################
  backendserver:
    build: ./BackendServer
    # only apply in dev mode and test with http://localhost/swagger
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      BASE_URL: https://ryvarr.com
      RUNNING_IN_DOCKER: true
      APP_PASSWORD: ${APP_PASSWORD}
      PAYPAL_CLIENT_ID: ${PAYPAL_CLIENT_ID_LIVE}
      PAYPAL_CLIENT_SECRET: ${PAYPAL_CLIENT_SECRET_LIVE}
      PAYPAL_MODE: live
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
    ######################################
    #scale: 5
    depends_on:
      - db
      - redis
    networks:
      - server-network

  # for orleans clustering
  redis:
    image: redis:7.2.3
    networks:
      - server-network

  client:
    build: ./client
    networks:
      - server-network