version: '3.8'
networks:
  server-network:
    driver: bridge
# docker compose up -d
# docker compose build
# docker compose down


services:
  client:
      build: ./Client
      networks:
        - server-network
  # important: not exposing ports so the server only listen to docker containers in his network
  nginx:
    build: ./nginx
    ports:
      - '80:80'
      - '443:443'
    networks:
      - server-network

  db:
    image: postgres:15.2
    ports:
      - '5432:5432' # used with pgadmin and remove in production
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    networks:
      - server-network
    volumes:
      - ./database/postgresql:/var/lib/postgresql/data

  cache:
    image: 'redis:7.0'
    networks:
      - server-network
    ports:
      - "6379:6379" # used with RedisInsight and remove in production
    volumes:
      - ./sessionCache/redis_data:/data
    ######################################
  authservice:
    build: ./AuthService
    # only apply in dev mode and test with http://localhost/swagger
    environment:
      ASPNETCORE_ENVIRONMENT: Development
    ######################################
    depends_on:
      - db
    networks:
      - server-network

  chessservice:
    build: ./ChessService
    # only apply in dev mode and test with http://localhost/swagger
    environment:
      ASPNETCORE_ENVIRONMENT: Development
    ######################################
    networks:
      - server-network
